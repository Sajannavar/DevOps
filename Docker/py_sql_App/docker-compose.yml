version: '3.8'

services:
  # Flask application service
  flask-app:
    build: .                       # Build the image from the current directory
    container_name: flask-app       # Name the container for easier identification
    ports:
      - "5000:5000"                 # Map port 5000 on the host to port 5000 in the container
    environment:
      - MYSQL_HOST=mysql-db         # Environment variables for MySQL connection
      - MYSQL_USER=user
      - MYSQL_PASSWORD=password
      - MYSQL_DB=flaskdb
    depends_on:
      - mysql-db                    # Wait for MySQL to start before starting Flask app
    networks:
      - flask-network               # Network to allow inter-container communication
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: always                 # Restart if the container stops

  # MySQL database service
  mysql-db:
    image: mysql:5.7                # Use MySQL 5.7 image
    container_name: mysql-db        # Name the container for easier identification
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: flaskdb
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"                 # Map MySQL port 3306 to the host
    networks:
      - flask-network
    volumes:
      - mysql_data:/var/lib/mysql   # Store MySQL data persistently
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-prootpassword"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: always                 # Restart if the container stops

networks:
  flask-network:                    # Define a custom network

volumes:
  mysql_data:                       # Define a persistent volume for MySQL data

